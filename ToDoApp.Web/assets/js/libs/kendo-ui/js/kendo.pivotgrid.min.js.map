{"version":3,"file":"kendo.pivotgrid.min.js","sources":["kendo.pivotgrid.js"],"sourcesContent":["(function(f, define) {\n    define('kendo.pivotgrid',[ \"kendo.pivot.common\", \"kendo.dom\", \"kendo.data\" ], f);\n})(function() {\n\nvar __meta__ = {\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\" ],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        common = window.kendo.pivotgrid.common,\n        fetchDiscover = common.fetchDiscover,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        isFunction = kendo.isFunction,\n        fetchData = common.fetchData,\n        createLocalDataState = common.createLocalDataState,\n        createDataTree = common.createDataTree,\n        sumAggregate = common.sumAggregate,\n        averageAggregate = common.averageAggregate,\n        minAggregate = common.minAggregate,\n        maxAggregate = common.maxAggregate,\n        createDataState = common.createDataState,\n        toColumns = common.toColumns,\n        toRows = common.toRows,\n        toTree = common.toTree,\n        toData = common.toData,\n        headersReducer = common.headersReducer,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = '<th data-key=\"#:key#\" class=\"#:headerClass#\" #if (colspan) {#colspan=\"#:colspan#\"#}# #if (rowspan) {#rowspan=\"#:rowspan#\"#}#>' +\n                                    '#if (expandable) {# <span class=\"k-icon k-i-arrow-chevron-#:iconClass# k-color-inherit\" role=\"presentation\"></span>#}#' +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED = \"k-i-collapse\",\n        STATE_COLLAPSED = \"k-i-expand\",\n        HEADER_TEMPLATE = \"<span>#: data.member.caption || data.member.name #</span>\",\n        KPISTATUS_TEMPLATE = '<span class=\"k-icon k-i-kpi-status-#=data.dataItem.value > 0 ? \\\"open\\\" : data.dataItem.value < 0 ? \\\"deny\\\" : \\\"hold\\\"#\" title=\"#:data.dataItem.value#\"></span>',\n        KPITREND_TEMPLATE = '<span class=\"k-icon k-i-kpi-trend-#=data.dataItem.value > 0 ? \\\"increase\\\" : data.dataItem.value < 0 ? \\\"decrease\\\" : \\\"equal\\\"#\" title=\"#:data.dataItem.value#\"></span>',\n        DATACELL_TEMPLATE = '#= data.dataItem ? kendo.htmlEncode(data.dataItem.fmtValue || data.dataItem.value) || \"&nbsp;\" : \"&nbsp;\" #',\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return $.extend(true, d, { name: d.name, type: d.type });\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    function flattenSortDescriptors(descriptors) {\n        var result = [];\n        for (var i = 0; i < descriptors.length; i++) {\n            result.push({\n                dir: descriptors[i].dir,\n                field: descriptors[i].field.split(\".\").pop()\n            });\n        }\n        return result;\n    }\n\n    function createLocalMeasure(field, key, format) {\n        var formatFunc = function(value) { return kendo.format(this.format, value); };\n        var measureMap = {\n            \"Sum\": sumAggregate,\n            \"Average\": averageAggregate,\n            \"Min\": minAggregate,\n            \"Max\": maxAggregate,\n        };\n        var valueFunc = function(item) { return item[this.field]; };\n        var measure = {\n                value: valueFunc.bind({ field: field }),\n                aggregate: measureMap[key],\n                caption: key,\n                uniqueName: key,\n                type: 2,\n                name: [key]\n            };\n        if (format) {\n            measure.aggregate.format = formatFunc.bind({ format: format });\n        }\n\n        return measure;\n    }\n\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            var cube = ((options || {}).schema || {}).cube;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                //schema: schema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            if (this._data === undefined || this._data.length === 0) {\n                var fn = function() {\n                    if (isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n\n                return this._query().done(fn);\n            }\n        },\n\n        _createSettings: function(axes) {\n            var settings = [];\n            var key;\n            var dimensions = this.cubeSchema.dimensionsSettings();\n            var displayValueFunc = function(item) { return item[this.key]; };\n            var sortValueFunc = function(value) { return value; };\n            for (var i = 0; i < axes.length; i++) {\n                key = axes[i].name[0];\n                settings.push({\n                    key: key,\n                    displayValue: displayValueFunc.bind({ key: key }),\n                    sortValue: sortValueFunc,\n                    caption: (dimensions[key] || {}).caption || key\n                });\n            }\n            return settings;\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensionsSettings: function() {\n                    return cube.dimensions;\n                },\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                restoreMeasure: function(measures, measure) {\n                    for (var i = 0; i < measures.length; i++) {\n                        if (!measures[i].aggregate) {\n                            measures[i].aggregate = measure.aggregate;\n                            measures[i].value = measure.value;\n                            measures[i].caption = measure.caption;\n                            measures[i].uniqueName = measure.uniqueName;\n                            measures[i].type = 2;\n                        }\n                    }\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push(createLocalMeasure(measures[key].field, key, measures[key].format));\n                    }\n\n                    return result;\n                },\n                memberType: function(name) {\n                    var getter = kendo.getter(normalizeName(name), true);\n                    var data = this.options.data || this._pristineData || [];\n                    if (!data.length) {\n                        return null;\n                    }\n\n                    return typeof getter(data[0]);\n                }.bind(this),\n                members: function(name) {\n                    var data = this.options.data || this._pristineData || [];\n                    var result = [];\n                    var distinct = {};\n                    var getter;\n                    var value;\n                    var idx = 0;\n\n                    if (name.indexOf(\"[(ALL)]\") !== -1) {\n                        return [\n                            {\n                                caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                levelUniqueName: name,\n                                name: name,\n                                childrenCardinality: 1,\n                                uniqueName: name\n                            }\n                        ];\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0 || value === false) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value + \"\",\n                                name: value + \"\",\n                                childrenCardinality: 0,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        read: function(data) {\n            var that = this;\n            var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            var params = that._params(data);\n            var deferred = $.Deferred();\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                if (that.options.data) {\n\n                    var originalData = (this.reader.data(this.options.data) || []).slice(0);\n                    if (originalData && !this._pristineData) {\n                        this._pristineData = originalData;\n                    }\n                    var columnSettings = that._createSettings(params.columnAxes);\n                    var rowSettings = that._createSettings(params.rowAxes);\n                    var measures = that.measures();\n                    var dataTree = createDataTree(that.options.data, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n                    var stateArgs = {\n                        dataTree: dataTree,\n                        columnSettings: columnSettings,\n                        rowSettings: rowSettings,\n                        columnAxes: params.columnAxes,\n                        rowAxes: params.rowAxes,\n                        measures: measures.map(function(item) { return item; }).reverse(),\n                        fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                        sort: flattenSortDescriptors(params.sort || [])\n                    };\n\n                    that._saveState(createLocalDataState(stateArgs));\n                    that.trigger(CHANGE);\n                    deferred.resolve();\n                } else {\n                    that.transport.read({\n                        data: params,\n                        success: function(newDataState) {\n                            that._saveState(newDataState);\n                            that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                            that.trigger(CHANGE);\n                            if (that._preventRefresh) {\n                                that._preventRefresh = false;\n                            }\n                            deferred.resolve();\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                }\n            }\n            return deferred.promise();\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                options.connection = that.options.transport.connection;\n            }\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            var that = this,\n                transport = that.transport;\n\n            if (transport.discover) {\n                return transport.discover(options);\n            }\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaKPIs\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover(\n            {\n                command: \"schemaDimensions\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n               command: \"schemaHierarchies\",\n               restrictions: {\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube(),\n                   dimensionUniqueName: dimensionName\n               }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaCatalogs\"\n            }, function(response) {\n                return response;\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            }, function(response) {\n                return response;\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = that._data = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            this._mergeState(params);\n\n            return this.read();\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                if (capitalize) {\n                    key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n\n            fetchData({ url: that.options.read }, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = '<span class=\"k-setting-delete k-chip-action\"><span class=\"k-icon k-i-close\"></span></span>';\n                }\n\n                that.options.template = ''\n                    + '<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" data-' + kendo.ns + 'name=\"${data.name || data}\">'\n                        + '<span class=\"k-chip-content\">'\n                            + '<span class=\"k-chip-text\">${data.name || data}</span>'\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target);\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).find('.k-i-sort-asc-sm').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: \"<div class='k-empty'>${data}</div>\",\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"k-i-sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-close-circle\", function(e) {\n                var target = $(e.target);\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filterable: options.filterable,\n                    filter: \".k-i-more-vertical\",\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined;\n            }\n\n            if (this._stateFilter !== undefined) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined;\n            this._stateFilter = undefined;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.focus().blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            var items = this._state();\n            var i, l;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            for (i = 0, l = name.length; i < l; i++) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var options = this.options;\n            var enabled = false;\n\n            if (this.options.setting != \"measures\") {\n                enabled = options.filterable || options.sortable;\n            }\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._state(items, true);\n            this._emptyState(!this._state().length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}<span class='k-icon k-i-gear k-color-inherit'></span></span>\",options.text));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\" });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\" });\n            that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.hasClass(\"k-i-arrow-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-widget k-pivotgrid\");\n\n            this.wrapper.append('<span class=\"k-pivotgrid-empty-cell\" />');\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this._contentWrapper.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: $.parseJSON(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.hasClass(STATE_EXPANDED);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n\n                    button.toggleClass(STATE_EXPANDED, !expanded)\n                          .toggleClass(STATE_COLLAPSED, expanded);\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-widget k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template;\n            var sortable = options.sortable;\n            var icons = '';\n\n            if (sortable) {\n                icons += '#if (data.sortIcon) {#';\n                icons += '<span class=\"k-chip-action\"><span class=\"k-icon ${data.sortIcon}-sm\"></span></span>';\n                icons += '#}#';\n            }\n\n            if (options.filterable || sortable) {\n                icons += '<span class=\"k-setting-fieldmenu k-chip-action\"><span class=\"k-icon k-i-more-vertical\"></span></span>';\n            }\n            if (this.options.reorderable) {\n                icons += '<span class=\"k-setting-delete k-chip-action\"><span class=\"k-icon k-i-close\"></span></span>';\n            }\n\n            template = ''\n                + '<span class=\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-' + kendo.ns + 'name=\"${data.name}\">'\n                    + '<span class=\"k-chip-content\">'\n                        + '<span class=\"k-chip-text\">${data.name}</span>'\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">' + icons + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: '<span class=\"k-empty\">${data}</span>',\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid k-widget\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-widget k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.template = kendo.template(options.template);\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $('<tr class=\"k-pivotgrid-row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $('<td class=\"k-pivotgrid-cell\"></td>');\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-header-total\");\n                    }\n                    cellEl.append(that.template({\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(\"<table class='k-pivotgrid-table'><colgroup></colgroup><tbody class='k-pivotgrid-tbody'></tbody></table>\");\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-pivotgrid-row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index]);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    cellEl = $(that.headerTemplate({\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\",cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\")\n                    }));\n                    cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(\"<table class='k-pivotgrid-table'><colgroup></colgroup><tbody class='k-pivotgrid-tbody'></tbody></table>\");\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", null, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", null, [ element(\"th\", null, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", null, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", null, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", null, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }));\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: \"k-header\" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                cellAttr = { className: \"k-icon \" + (childrenLength ? STATE_EXPANDED : STATE_COLLAPSED) };\n                cellAttr[kendo.attr(\"path\")] = path;\n\n                cellChildren.push(element(\"span\", cellAttr));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", null, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", null, [ element(\"td\", null, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", null, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = \"k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first\";\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", null, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }));\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                expandIconAttr = { className: \"k-icon \" + (childrenLength ? STATE_EXPANDED : STATE_COLLAPSED) };\n                expandIconAttr[kendo.attr(\"path\")] = path;\n\n                cellChildren.push(element(\"span\", expandIconAttr));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", null, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", null, [ element(\"td\", null, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", null, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined) {\n                    continue;\n                }\n\n                attr = {};\n                if (columnInfo.children) {\n                    attr.className = \"k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = {};\n            if (rowInfo.children) {\n                attr.className = \"k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this\n            });\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3) { (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","features","$","window","kendo","jQuery","undefined","ui","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","o","map","extend","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","REQUESTSTART","PROGRESS","REQUESTEND","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","COLLAPSEMEMBER","STATE_EXPANDED","STATE_COLLAPSED","HEADER_TEMPLATE","KPISTATUS_TEMPLATE","KPITREND_TEMPLATE","DATACELL_TEMPLATE","LAYOUT_TABLE","AXIS_ROWS","AXIS_COLUMNS","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","member","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","length","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","addMissingPathMembers","axis","firstTuple","tupleMembers","found","j","getName","hierarchy","tupleToDescriptors","descriptorsForMembers","measures","tupletoSearch","findExistingTuple","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","dataItem","isNumber","val","isNaN","isDate","getTime","getScollWidth","scrollbar","div","document","createElement","style","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","flattenSortDescriptors","i","dir","split","pop","createLocalMeasure","key","format","formatFunc","value","this","measureMap","Sum","Average","Min","Max","valueFunc","item","bind","caption","uniqueName","functions","sum","count","average","max","min","PivotCubeBuilder","init","options","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","aggregatorsLength","dimensionsSchema","root","parts","measureIdx","rootNamesLength","keys","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","sortedMaps","sortTree","flattenTree","mapItem","directParentName","fillSortTree","sortItemsTree","create","flatColumns","index","_expandedTuples","expanded","current","currentKeys","accumulatorKeys","memberInfo","expandedNames","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","rowMeasureNamesLength","rowMeasureNames","columnMeasureNames","rowLength","columnLength","items","_addData","resultFunc","fmtValue","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","measureDescriptors","aggregators","defaultAggregate","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","aggregatedData","rowValue","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","sort","axes","PivotTransport","transport","discover","read","update","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","that","_data","_query","done","_createSettings","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","_pristineData","distinct","levelUniqueName","childrenCardinality","isPrevented","trigger","params","_params","deferred","Deferred","originalData","reader","columnSettings","columnAxes","rowSettings","rowAxes","dataTree","dataField","columnsData","stateArgs","reverse","_saveState","resolve","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","memberName","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","adjustDataByColumn","membersCount","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","columnMeasures","rowMeasures","startIndex","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","parseSource","prepareDataOnColumns","mergedColumns","mergeTuples","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toJSON","rowIndex","drop","toAdd","Math","splice","dataIndex","_observe","_ranges","_addRange","_total","_pristineTotal","roots","indexes","memberIdx","last","tupleName","_addMissingDataItems","metadata","parseInt","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","dataIdx","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","sourceTuples","targetTuples","columnIdx","targetColumnsLength","measuresLength","tupleIndex","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentPath","parentMember","measurePosition","normalizeTupleMeasures","measureIndex","indices","buildDataIndices","targetIndex","sourceIndex","calcIndex","spliceIndex","baseHierarchyPath","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","child","l","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeFilters","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","sortExpr","transports","xmla","readers","expressions","removeExpr","PivotConfiguratorButton","PivotSettingTarget","element","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","action","closest","attr","hasClass","remove","sortable","sortDirection","currentTarget","find","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","allowUnsort","skipExpr","html","sortIcon","_sortIcon","off","icon","PivotSettingTargetV2","parent","text","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","focus","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","_element","_attachEvents","configurator","setOptions","toggle","pivotEl","pivot","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","notify","height","columnWidth","_windowResizeHandler","_progressHandler","_errorHandler","_requestStart","_error","_resize","setProperty","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","ctrlKey","delta","wheelDeltaY","preventDefault","one","css","_progress","progress","grid-template-columns","grid-template-rows","offsetHeight","contentTable","columnTable","calculatedWidth","minWidth","ceil","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","hash","columnTuple","rowTuple","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","PivotGrid","plugin","columnBuilder","rowBuilder","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","is","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","icons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","support","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","setTimeout","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","_resetColspan","skipScrollbar","clientHeight","cell","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","rowspan","rowSpan","colspan","colSpan","iconClass","expandable","headerClass","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","rowKey","parentRow","collapsed","notFirst","measureRow","_cell","_content","nextMember","childRow","childrenLength","allCell","cellAttr","cellChildren","memberCollapsed","rootLevelNum","firstMemberName","maxcolSpan","allRow","tuplePath","expandIconAttr","hasChild","axisInfo","axisInfoMember","firstEmpty","skipChildren","_buildRow","startIdx","templateInfo","cellContent","PivotExcelMixin","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","rowHeaderRows","contentRows","columnRows","dataCallback","rowRows","_freezePane","colSplit","rowSplit","workbook","resolveFn","sheets","freezePane","proto","excel","saveAsExcel","proxyURL","fileName","exporter","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","amd","a1","a2","a3"],"mappings":"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"}